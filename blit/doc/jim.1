.TH JIM 1 Blit
.SH NAME
jim \- Blit text editor
.SH SYNOPSIS
.B jim
[ files ]
.SH DESCRIPTION
.I Jim
is the text editor for the Blit terminal.
It relies on the mouse to select text and commands.
It runs only under
.IR mpx (1).
.IR Jim 's
screen consists of a number of
.IR frames ,
a one-line command and diagnostic frame at the bottom
and zero or more larger file frames above it.
Except where indicated, these frames behave identically.
One of the frames is always the current frame,
to which typing and editing commands refer,
and one of the file frames is the working frame,
to which file commands such as pattern searching and I/O refer.
.PP
A frame has at any time a selected region of text,
indicated by reverse video highlighting.
The selected region may be a null string between two characters,
indicated by a narrow vertical bar between the characters.
The editor has a single
.I "save buffer
containing an arbitrary string.
The editing commands simply invoke transformers between the
selected region and the save buffer.
.PP
The mouse buttons are used for the most common operations.
Button 1 (left) is used for selection.
Clicking button 1 in a frame
which is not the current frame makes the indicated frame current.
Clicking button 1 in the current frame selects the null string closest
to the mouse cursor.
By pushing and holding button 1, an arbitrary contiguous visible string
may be selected.
Button 2 provides a small menu of text manipulation functions, described below.
Button 3 provides control for inter-frame operations.
.PP
The button 2 menu entries are:
.TP
.B cut
Copy the selected text to the save buffer and delete it from the frame.
If the selected text is null, the save buffer is unaffected.
.TP
.B paste
Replace the selected text by the contents of the save buffer.
.TP
.B snarf
Copy the selected text to the save buffer.
If the selected text is null, the save buffer is unaffected.
.PP
Typing
replaces the selected text with the typed text.
If the selected text is not null,
the first character typed forces an implicit
.BR cut .
Control characters are discarded, but
BS (control H),
ETB (control W) and ESC have special meanings.
BS is the usual backspace character, which erases the character before the selected text (which is a null string when it takes effect).
ETB erases back to the word boundary preceding the selected text.
There is no line kill character.
ESC selects the text typed since the last button hit or ESC.
If an ESC is typed immediately after a button hit or ESC,
it is identical to a
.BR cut .
ESC and
.B paste
provide the functionality for a simple undo feature.
.PP
The button 3 menu entries are:
.TP
.B new
Create a new frame, much as in mpx.
.TP
.B reshape
Change the shape of the indicated frame, much as in mpx.
The frame is indicated by a button 3 hit after the selection.
.TP
.B close
Close the indicated frame.
The file is still available for editing later;
only the associated frame is shut down.
.TP
.B write
Write the indicated frame's contents to its associated file.
.PP
The rest of the menu is a list of file names available for editing.
To work in a different file, select the file from the menu.
If the file is not open on the screen, the cursor will switch to an
outline box to prompt for a rectangle to be swept out with button 3,
as in the New operator of mpx.
If the file is already open, it will simply be made the workframe and
current frame (for typing), perhaps after redrawing if it is obscured
by another frame.
The format of the lines in the menu is
.TP
\-
possibly an apostrophe, indicating that the file has been modified since
last written,
.TP
\-
possibly a period or asterisk, indicating the file is open (asterisk) or
the workframe (period),
.TP
\-
a blank,
.TP
\-
and the file name.
The file name may be abbreviated by compacting path components to keep
the menu manageable, but the last component will always be complete.
.PP
The work frame has a
.I "scroll bar
\(em a black vertical bar down the left edge.
A small tick in the bar indicates the relative position of the frame
within the file.
Pointing to the scroll bar and clicking a button controls scrolling
operations in the file:
.TP
button 1
Move the line at the top of the screen to the y position of the mouse.
.TP
button 2
Move to the absolute position in the file indicated by the y position of the mouse.
.TP
button 3
Move the line at the y position of the mouse to the top of the screen.
.PP
The bottom line frame is used for a few typed commands, modeled on
.IR ed (1) ,
which operate on the workframe.
When a carriage return is typed in the bottom line,
the line is interpreted as a command.
The bottom line (in some sense) scrolls, but
when the first character
.I after
a newline is to be displayed there, not when the newline appears.
Thus, typically, after some message appears in the bottom line,
a command need only be typed;
the contents of the line will be automatically cleared when the first
character of the command is typed.
The commands available are:
.TP
.B e
Edit the named file, or use the current file name if none specified.
Note that each file frame has an associated file name.
.TP
.B f
Set the name of the file associated with the work frame, if one is specified,
and display the result.
.TP
.B w
Write the named file, or use the current file name if none specified.
.TP
.B q
Quit the editor.
.TP
.B /
Search forward for the a string matching the regular expression after the slash.
If found, the matching text is selected.
The regular expressions are exactly as in
.IR egrep (1),
with two additions: the character `@' matches any character
.I including
newline, and the sequence `\en' specifies a newline, even in character classes.
The negation of a character class does not match a newline.
An empty regular expression (slash-newline) repeats the last regular expression.
.TP
.B ?
Search backwards for the expression after the query.
.TP
.B 94
Select the text of line 94, as in
.IR ed .
.TP
.B cd
Set the working directory, as in the shell.
There is no CDPATH search.
.TP
.B >\f2Unix-command\fP
Send the selected text to the standard input of
.IR Unix-command .
.TP
.B <\f2Unix-command\fP
Replace the selected text by the standard output of
.IR Unix-command .
.TP
.B |\|\f2Unix-command\fP
Replace the selected text by the standard output of
.IR Unix-command,
given the original selected text as standard input.
.PP
If any of <, > or | is preceded by an asterisk *,
the command is applied to the entire file, instead of just the selected text.
If the command for < or | exits with non-zero status, the original text
is not deleted; otherwise, the new text is selected.
Finally, the standard error output of the command, which is merged with the
standard output for >, is saved in the file
$HOME/jim.err .
If the file is non-empty when the command completes, the first line is
displayed in the diagnostic frame.  Therefore the command ``>pwd''
will report
.IR jim 's
current directory.
.PP
Attempts to quit with modified files, or edit a new file
in a modified frame, are rejected.
A second `q' or `e' command will succeed.
The `Q' or `E' commands ignore modifications and work immediately.
Some consistency checks are performed for the `w' command.
.I Jim
will reject write requests which it considers dangerous
(such as writes which would change a file modified since
.i jim
read it into its memory).
A second `w' will always write the file.
.PP
.I Jim
is reshape-able,
but a reshape closes all open frames.
.SH FILES
.ta \w'/usr/jerq/lib/jim.m      'u
/usr/jerq/lib/jim.m	terminal support program
.br
/tmp/jim.*	temporary file
.br
$HOME/jim.err	saved diagnostic output from Unix commands
.SH BUGS
The regular expression matcher is non-deterministic (unlike
.IR egrep ),
and may be slow for spectacular expressions.
The < and | operators should snarf the original text.
